from typing import Optional, Union

from crum import get_current_user
from django.contrib.auth import get_user_model
from django_filters.rest_framework import DjangoFilterBackend
from djoser.serializers import ActivationSerializer
from drf_spectacular.utils import extend_schema_view, extend_schema
from rest_framework import status
from rest_framework.decorators import action
from rest_framework.request import Request
from rest_framework.response import Response
from rest_framework.status import HTTP_204_NO_CONTENT
from common.views import ExtendedUserViewSet
from rest_framework.filters import SearchFilter, OrderingFilter
from users.serializers.api.serializer_user import (
    RegistrationsSerializer,
    UserSearchListSerializer,
    UserListSerializer,
    UserUpdateSerializer,
    ChangePasswordSerializer,
    CustomResetPasswordSerializer,
    CustomResetPasswordConfirmSerializer,
)
from users.services.tasks.reset_password import UserResetPasswordService

User = get_user_model()

def get_context(
        user: User, request: Request, send_email: bool
) -> Optional[dict[str, Union[str, int]]]:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞."""
    if send_email:
        context = {
            'user_id': user.pk,
            'domain': request.get_host(),
            'protocol': 'https' if request.is_secure() else 'http',
            'site_name': request.get_host(),
        }
        return context

@extend_schema_view(
    registration=extend_schema(
        summary='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
        tags=['üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å']
    ),
    activate=extend_schema(
        summary='–ê–∫—Ç–∏–≤–∞—Ü–∏—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
        tags=['üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å']
    ),
    user_search=extend_schema(
        summary='–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.',
        tags=['üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å']
    ),
    user_list=extend_schema(
        summary='–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.',
        tags=['üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å']
    ),
    user_update=extend_schema(
        summary='–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
        tags=['üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å']
    )
)
class AuthView(ExtendedUserViewSet):
    """
    –ö–ª–∞—Å—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –≤–∫–ª—é—á–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –∞–∫—Ç–∏–≤–∞—Ü–∏—é, –ø–æ–∏—Å–∫, –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∞ —Ç–∞–∫–∂–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

    –ú–µ—Ç–æ–¥—ã:
    - registration: –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - activate: –ú–µ—Ç–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - user_list: –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    - user_update: –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - user_search: –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ.
    """

    serializer_class = UserListSerializer()
    multi_serializer_class = {
        'registration': RegistrationsSerializer,
        'activate': ActivationSerializer,
        'user_search': UserSearchListSerializer,
        'user_list': UserListSerializer,
        'user_update': UserUpdateSerializer,
    }
    queryset = User.objects.all()

    def get_object(self) -> User:
        """
        –ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–ø—Ä–æ—Å–∞.
        –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ —Å–ª—É—á–∞–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            User: —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ `request.user`.
        """
        return self.request.user
        # –í —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –º—ã —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é `self.request.user`,
        # —á—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç –æ—à–∏–±–∫—É "look_up fields". –≠—Ç–∞ –æ—à–∏–±–∫–∞ –º–æ–∂–µ—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω–µ—Ç —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ
        # –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ
        # –º—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –∏ –æ–±—ä–µ–∫—Ç `request.user` –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω.

    @action(methods=['POST'], detail=False)
    def registration(self, request: Request, *args: None, **kwargs: None) -> Response:
        """
        –ú–µ—Ç–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            request: –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            Response: –û—Ç–≤–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
        """
        return self.create(request, *args, **kwargs)

    @action(methods=['POST'], detail=False)
    def activate(self, request: Request, *args: None, **kwargs: None) -> Response:
        """
        –ú–µ—Ç–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∫–∞–∫–æ–π-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            request: –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            Response: –û—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.
        """
        pass

    @action(methods=['GET'], detail=False)
    def user_list(self, request: Request, *args: None, **kwargs: None) -> Response:
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

        –í —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ retrieve –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            request: –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            Response: –°–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        """
        return self.retrieve(request, *args, **kwargs)

    @action(methods=['PUT', 'PATCH'], detail=False)
    def user_update(self, request: Request, *args: None, **kwargs: None) -> Response:
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞ (PUT –∏–ª–∏ PATCH) –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ.
        –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å `update_methods`, –∫–æ—Ç–æ—Ä—ã–π —Å–≤—è–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥—ã —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            request: –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            Response: –û—Ç–≤–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
        """
        update_methods = {'PUT': self.update, 'PATCH': self.partial_update}
        for method, func in update_methods.items():
            if method == request.method:
                return func(request, *args, **kwargs)

    filter_backends = (SearchFilter, OrderingFilter, DjangoFilterBackend)  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    search_fields = ('id', 'username', 'first_name', 'last_name', 'email')  # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
    ordering_fields = ['username', 'id']  # –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    ordering = ['username', '-id']  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    @action(methods=['GET'], detail=False)
    def user_search(self, request: Request) -> Response:
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

        –í —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ
        –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            request: –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            Response: –°–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        """
        queryset = self.filter_queryset(self.get_queryset())  # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö:
        # page = self.paginate_queryset(queryset)  # –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        # if page is not None:
        #     serializer = self.get_serializer(page, many=True)
        #     return self.get_paginated_response(serializer.data)
        serializer = self.get_serializer(queryset, many=True)  # –ï—Å–ª–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
        return Response(serializer.data)


@extend_schema_view(
    change_password=extend_schema(
        summary='',
        tags=['üîê –ü–∞—Ä–æ–ª—å'],
    ),

    reset_password=extend_schema(
        summary='',
        tags=['üîê –ü–∞—Ä–æ–ª—å'],
    ),

    reset_password_confirm=extend_schema(
        summary='',
        tags=['üîê –ü–∞—Ä–æ–ª—å'],
    )
)
class PasswordChangingView(ExtendedUserViewSet):

    serializer_class = ChangePasswordSerializer()
    multi_serializer_class = {
        'change_password': ChangePasswordSerializer,
        'reset_password': CustomResetPasswordSerializer,
        'reset_password_confirm': CustomResetPasswordConfirmSerializer
    }

    @action(methods=['POST'], detail=False)
    def change_password(self, request: Request) -> Response:
        user = get_current_user()
        serializer = self.get_serializer(instance=user, data=request.data)
        serializer.is_valid(raise_exception=True)
        serializer.save()
        return Response(status=HTTP_204_NO_CONTENT)

    @action(methods=['POST'], detail=False)
    def reset_password(self, request: Request, *args: None, **kwargs: None) -> Response:
        serializer = self.get_serializer(data=request.data)
        serializer.is_valid(raise_exception=True)
        user = get_current_user()
        context = get_context(user, request, bool(user))
        reset_password = UserResetPasswordService(user, context)
        reset_password.execute()
        return Response(status=status.HTTP_204_NO_CONTENT)

    @action(methods=['POST'], detail=False)
    def reset_password_confirm(self, request: Request, *args: None, **kwargs: None) -> Response:
        pass

