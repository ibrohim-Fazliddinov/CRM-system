from drf_spectacular.utils import extend_schema_view, extend_schema
from clients.models.model_tk import Task
from clients.serializers.api.task import (
    TaskCreateSerializer,
    TaskUpdateSerializer,
    TaskListSerializer,
    TaskDeleteSerializer
)
from common.views import CLUDViewSet


@extend_schema_view(
    create=extend_schema(
        summary='–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏', tags=['üìÑ –ó–∞–¥–∞—á–∏']
    ),
    update=extend_schema(
        summary='–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏', tags=['üìÑ –ó–∞–¥–∞—á–∏']
    ),
    partial_update=extend_schema(
        summary='–ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏', tags=['üìÑ –ó–∞–¥–∞—á–∏']
    ),
    destroy=extend_schema(
        summary='–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏', tags=['üìÑ –ó–∞–¥–∞—á–∏']
    ),
    list=extend_schema(
        summary='–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á', tags=['üìÑ –ó–∞–¥–∞—á–∏']
    ),
)
class TaskView(CLUDViewSet):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏.

    –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
    - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
    - –ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
    - –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
    - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
    """

    queryset = Task.objects.all()
    multi_serializer_class = {
        'create': TaskCreateSerializer,
        'update': TaskUpdateSerializer,
        'partial_update': TaskUpdateSerializer,
        'list': TaskListSerializer,
        'delete': TaskDeleteSerializer,
    }

    def perform_create(self, serializer: TaskCreateSerializer) -> None:
        """
        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∑–∞–¥–∞—á–∏ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º.

        :param serializer: –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏.
        """
        serializer.save(manager=self.request.user)

